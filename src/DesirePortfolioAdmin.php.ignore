<?php
/**
 * @author: Franck LEBAS
 * @package: desire-portfolio-filter
 */

class DesirePortfolioAdmin {
	/**
	 * Holds the values to be used in the fields callbacks
	 */
	private $options;
	private $plugin_options;

	public function __construct() {

		/* Array Model to use
		$options = array(
			"option_section_name" => array(
				"option_field_name" => array(
					"libelle" => "option name to show",
					"id" => "option slug",
					"type" => "type of field (textarea, text, checkbox etc)",
					"value" => "default value"
					"options" => false or array (for select inputs)
				)
			)
		);
		*/
		$this->plugin_options = get_option('portfolio_options');
		$this->options = array(
			'portfolio_options' => array(
				'display_types' => array(
					"libelle"   => 'Display project types ?',
					"id"        => "display_types",
					"type"      => "checkbox",
					"value"     => false,
					"options"    => false
				),
				'display_tags'  => array(
					"libelle"   => 'Display project tags ?',
					"id"        => "display_tags",
					"type"      => "checkbox",
					"value"     => false,
					"options"    => false
				),
				'display_content' => array(
					"libelle"   => 'Display project content ?',
					"id"        => "display_content",
					"type"      => "checkbox",
					"value"     => false,
					"options"    => false
				),
				'include_type'  => array(
					"libelle"   => 'Display types (seperated by commas)',
					"id"        => "display_types",
					"type"      => "text",
					"value"     => "all",
					"options"    => false
				),
				'include_tag'   => array(
					"libelle"   => 'Display tags (seperated by commas)',
					"id"        => "display_tags",
					"type"      => "text",
					"value"     => "all",
					"options"    => false
				),
				'showposts'     => array(
					"libelle"   => 'Number of projects to display',
					"id"        => "showposts",
					"type"      => "text",
					"value"     => "-1",
					"options"    => false
				),
				'order'         => array(
					"libelle"   => 'Ascending or descending order ?',
					"id"        => "order",
					"type"      => "select",
					"value"     => "ASC",
					"options"    => array(
						'ASC',
						'DESC'
					)
				),
				'orderby'       => array(
					"libelle"   => 'Order by',
					"id"        => "orderby",
					"type"      => "select",
					"value"     => "date",
					"options"    => array(
						'date',
						'title'
					)
				),
			),
			'desire_isotop_options'    => array(
				'columns'       => array(
					"libelle"   => 'Number of columns',
					"id"        => "columns",
					"type"      => "text",
					"value"     => "3",
					"options"    => false
				),
			)
		);
		add_action( 'admin_menu', array( &$this, 'dpf_admin_page' ) );
		add_action( 'admin_init', array( &$this, 'dpf_page_init' ) );
	}

	public function dpf_option_init() {
	}

	/**
	 * Add options page
	 */
	public function dpf_admin_page()
	{
		// This page will be under "Settings"
		add_options_page(
			'Desire portfolio filter admin page',
			'Desire portfolio filter admin page',
			'manage_options',
			'desire-portfolio-filter-admin-settings',
			array( $this, 'dpf_create_admin_page' )
		);
	}

	/**
	 * Options page callback
	 */
	public function dpf_create_admin_page()
	{
		?>
		<div class="wrap">
			<h2><?php print(__('Portfolio  settings', 'desire-portfolio-filter') ); ?></h2>
			<form method="post" action="options.php">
				<?php
				// This prints out all hidden setting fields
				settings_fields( 'desire-portfolio-filter-admin-settings' );
				do_settings_sections( 'desire-portfolio-filter-admin-settings' );
				submit_button();
				?>
			</form>
		</div>
	<?php
	}

	/**
	 * Register and add settings
	 */
	public function dpf_page_init() {


		foreach ( $this->options as $section => $options ) {

			if( false == get_option( $section ) ) {
				add_option( $section );
			}
			add_settings_section(
				$section, // ID
				$section, // Title
				array( &$this, 'dpf_print_section_info' ), // Callback
				'desire-portfolio-filter-admin-settings' // Page
			);

			foreach ( $options as $option ) {
				if ( false == get_option($section[$option]) ) {
					add_option($section[$option]);
				}
				var_dump(get_option($section[$option])); die();
				add_settings_field(
					$option['id'], // ID
					$option['libelle'], // Title
					array( &$this, 'dpf_build_fields' ), // Callback
					'desire-portfolio-filter-admin-settings', // Page
					$section, // Section
					array(
						'section'   =>  $section,
						'libelle'   =>  $option['libelle'],
						'id'        =>  $option['id'],
						'type'      =>  $option['type'],
						'value'     =>  $option['value'],
						'options'   =>  $option['options']
					)
				);
			}

			// Register settings
			register_setting(
				'desire-portfolio-filter-admin-settings', // Option group
				'desire_portfolio_options' // Option name
			//$this->sanitize( $option_value ) // sanitize option value
			);
		}
	}

	/**
	 * Get the settings option array and print one of its values
	 */
	public function dpf_build_fields($args)
	{
		// Check type of field
		switch ( $args['type'] ) {
			case "checkbox":
				$this->generateCheckboxField($args);
				break;
			case "text":
				$this->generateTextField($args);
				break;
			case "select":
				$this->generateSelectField($args);
				break;
		}
	}

	/**
	 * Generate text field
	 */
	public function generateTextField($args) {
		extract($args);
		$option_name = $section.'['.$id.']['.$id.']';
		$html = '<label for="' . $option_name . '">' . $libelle . '</label>';
		$html .= '<input type="text" id="' . $option_name . '" name="' . $option_name . '" value="' . $value . '">';
		echo $html;
	}

	/**
	 * Generate checkbox field
	 */
	public function generateCheckboxField($args) {
		extract($args);
		$option_name = $section.'['.$id.']['.$id.']';
		$html = '<label for="' . $option_name . '">' . $libelle . '</label>';
		$html .= '<input type="checkbox" id="' . $option_name . '" name="' . $option_name . '" value="' . $value . '" ' . checked(1, $value, false) . '>';
		echo $html;
	}

	/**
	 * Generate select field
	 */
	public function generateSelectField($args) {
		extract($args);
		$option_name = $section.'['.$id.']['.$id.']';
		$html = '<label for="' . $option_name . '">' . $libelle . '</label>';
		$html .= '<select id="' . $option_name . '" name="' . $option_name . '">';
		foreach ( $options as $option ) {
			$html .= '<option value="' . $option . '">' . $option . '</option>';
		}
		$html .= '</select>';
		echo $html;
	}

	/**
	 * Sanitize each setting field as needed
	 *
	 * @param array $input Contains all settings fields as array keys
	 */
	public function sanitize( $option_value )
	{
		$new_input = array();
		if( isset( $option_value ) && !is_bool($option_value) )
			$new_input =  $option_value;
		else
			$new_input = $option_value;

		return $new_input;
	}

	/**
	 * Print the Section text
	 */
	public function dpf_print_section_info()
	{
		print(__('Register your settings', 'desire-portfolio-filter'));
	}
}